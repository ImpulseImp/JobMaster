// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider  = "prisma-client-js"
 
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Test{
   id         Int      @id @default(autoincrement())
   createdAt    DateTime   @default(now())
   title String
}

model User {
  id         Int      @id @default(autoincrement())
  clerkId      String     @unique
  firstName    String
  lastName     String
  email      String   @unique
  profileImage String
  dateOfBirth DateTime?
  age        Int?
  role       String   @default("Guest")
  passedTests TestRecord[]
  messages   Message[]
  doneTasks  TaskRecord[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model TestRecord {
  id        Int      @id @default(autoincrement())
  userId    Int
  score     Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  updatedAt    DateTime   @updatedAt
}

model Message {
  id        Int      @id @default(autoincrement())
  userId    Int
  content   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  updatedAt    DateTime   @updatedAt
}

model TaskRecord {
  id        Int      @id @default(autoincrement())
  userId    Int
  taskName  String
  completed Boolean
  completedAt DateTime?
  user      User     @relation(fields: [userId], references: [id])
  updatedAt    DateTime   @updatedAt
}